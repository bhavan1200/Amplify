{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bhavan\\\\Project\\\\components\\\\ContactListItem\\\\index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { User } from \"../../types\";\nimport styles from \"./style\";\nimport { useNavigation } from '@react-navigation/native';\nimport { API, graphqlOperation, Auth } from \"aws-amplify\";\nimport { createChatRoom, createChatRoomUser } from \"../../src/graphql/mutations\";\n\nvar ContactListItem = function ContactListItem(props) {\n  var user = props.user;\n  var navigation = useNavigation();\n\n  var onClick = function onClick() {\n    var newChatRoomData, newChatRoom, userInfo;\n    return _regeneratorRuntime.async(function onClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoom, {\n              input: {\n                lastMessageID: \"zz753fca-e8c3-473b-8e85-b14196e84e16\"\n              }\n            })));\n\n          case 3:\n            newChatRoomData = _context.sent;\n\n            if (newChatRoomData.data) {\n              _context.next = 7;\n              break;\n            }\n\n            console.log(\" Failed to create a chat room\");\n            return _context.abrupt(\"return\");\n\n          case 7:\n            newChatRoom = newChatRoomData.data.createChatRoom;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoomUser, {\n              input: {\n                userID: user.id,\n                chatRoomID: newChatRoom.id\n              }\n            })));\n\n          case 10:\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n          case 12:\n            userInfo = _context.sent;\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoomUser, {\n              input: {\n                userID: userInfo.attributes.sub,\n                chatRoomID: newChatRoom.id\n              }\n            })));\n\n          case 15:\n            navigation.navigate('ChatRoom', {\n              id: newChatRoom.id,\n              name: \"Hardcoded name\"\n            });\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 18]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.lefContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: user.imageUri\n    },\n    style: styles.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.midContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.username,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, user.name), React.createElement(Text, {\n    numberOfLines: 2,\n    style: styles.status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, user.status)))));\n};\n\nexport default ContactListItem;","map":{"version":3,"sources":["C:/Users/bhavan/Project/components/ContactListItem/index.js"],"names":["React","User","styles","useNavigation","API","graphqlOperation","Auth","createChatRoom","createChatRoomUser","ContactListItem","props","user","navigation","onClick","graphql","input","lastMessageID","newChatRoomData","data","console","log","newChatRoom","userID","id","chatRoomID","currentAuthenticatedUser","userInfo","attributes","sub","navigate","name","container","lefContainer","uri","imageUri","avatar","midContainer","username","status"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  TouchableWithoutFeedback\r\n} from \"react-native\";\r\nimport { User } from \"../../types\";\r\nimport styles from \"./style\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport {\r\n  API,\r\n  graphqlOperation,\r\n  Auth,\r\n} from \"aws-amplify\";\r\nimport {\r\n  createChatRoom,\r\n  createChatRoomUser\r\n} from '../../src/graphql/mutations';\r\n\r\nexport type ContactListItemProps = {\r\n  user: User;\r\n}\r\n\r\nconst ContactListItem = (props: ContactListItemProps) => {\r\n  const { user } = props;\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const onClick = async () => {\r\n    try {\r\n\r\n      //  1. Create a new Chat Room\r\n      const newChatRoomData = await API.graphql(\r\n        graphqlOperation(\r\n          createChatRoom, {\r\n            input: {\r\n              lastMessageID: \"zz753fca-e8c3-473b-8e85-b14196e84e16\"\r\n            }\r\n          }\r\n        )\r\n      )\r\n\r\n      if (!newChatRoomData.data) {\r\n        console.log(\" Failed to create a chat room\");\r\n        return;\r\n      }\r\n\r\n      const newChatRoom = newChatRoomData.data.createChatRoom;\r\n\r\n      // 2. Add `user` to the Chat Room\r\n      await API.graphql(\r\n        graphqlOperation(\r\n          createChatRoomUser, {\r\n            input: {\r\n              userID: user.id,\r\n              chatRoomID: newChatRoom.id,\r\n            }\r\n          }\r\n        )\r\n      )\r\n\r\n      //  3. Add authenticated user to the Chat Room\r\n      const userInfo = await Auth.currentAuthenticatedUser();\r\n      await API.graphql(\r\n        graphqlOperation(\r\n          createChatRoomUser, {\r\n            input: {\r\n              userID: userInfo.attributes.sub,\r\n              chatRoomID: newChatRoom.id,\r\n            }\r\n          }\r\n        )\r\n      )\r\n\r\n      navigation.navigate('ChatRoom', {\r\n        id: newChatRoom.id,\r\n        name: \"Hardcoded name\",\r\n      })\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={onClick}>\r\n      <View style={styles.container}>\r\n        <View style={styles.lefContainer}>\r\n          <Image source={{ uri: user.imageUri }} style={styles.avatar}/>\r\n\r\n          <View style={styles.midContainer}>\r\n            <Text style={styles.username}>{user.name}</Text>\r\n            <Text numberOfLines={2} style={styles.status}>{user.status}</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  )\r\n};\r\n\r\nexport default ContactListItem;"]},"metadata":{},"sourceType":"module"}