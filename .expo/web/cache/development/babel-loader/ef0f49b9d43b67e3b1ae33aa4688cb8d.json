{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\bhavan\\\\Project\\\\src\\\\containers\\\\Sidebar.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Drawer, List, ListItem, ListItemText, TextField, ListItemIcon } from '@material-ui/core';\nimport { Person as PersonIcon, Public as PublicIcon } from '@material-ui/icons';\nimport API, { graphqlOperation } from '@aws-amplify/api';\nimport Auth from '@aws-amplify/auth';\nimport { createPost } from \"../graphql/mutations\";\nimport { useHistory } from 'react-router';\nvar drawerWidth = 340;\nvar MAX_POST_CONTENT_LENGTH = 140;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      position: 'relative'\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      position: 'relative'\n    },\n    toolbar: theme.mixins.toolbar,\n    textField: {\n      width: drawerWidth\n    },\n    list: {\n      width: 300\n    }\n  };\n});\nexport default function Sidebar(_ref) {\n  var activeListItem = _ref.activeListItem;\n  var classes = useStyles();\n  var history = useHistory();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isError = _React$useState4[0],\n      setIsError = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      helperText = _React$useState6[0],\n      setHelperText = _React$useState6[1];\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n\n    if (event.target.value.length > MAX_POST_CONTENT_LENGTH) {\n      setIsError(true);\n      setHelperText(MAX_POST_CONTENT_LENGTH - event.target.value.length);\n    } else {\n      setIsError(false);\n      setHelperText('');\n    }\n  };\n\n  var onPost = function onPost() {\n    var res;\n    return _regeneratorRuntime.async(function onPost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createPost, {\n              input: {\n                type: 'post',\n                content: value,\n                timestamp: Math.floor(Date.now() / 1000)\n              }\n            })));\n\n          case 2:\n            res = _context.sent;\n            console.log(res);\n            setValue('');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signOut = function signOut() {\n    Auth.signOut().then(function (data) {\n      return console.log(data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  return React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    anchor: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(ListItem, {\n    button: true,\n    selected: activeListItem === 'global-timeline',\n    onClick: function onClick() {\n      Auth.currentAuthenticatedUser().then(function (user) {\n        history.push('/global-timeline');\n      });\n    },\n    key: \"global-timeline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, React.createElement(PublicIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })), React.createElement(ListItemText, {\n    primary: \"Global Timeline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })), React.createElement(ListItem, {\n    button: true,\n    selected: activeListItem === 'profile',\n    onClick: function onClick() {\n      Auth.currentAuthenticatedUser().then(function (user) {\n        history.push('/' + user.username);\n      });\n    },\n    key: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, React.createElement(PersonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), React.createElement(ListItemText, {\n    primary: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), React.createElement(ListItem, {\n    key: \"post-input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItemText, {\n    primary: React.createElement(TextField, {\n      error: isError,\n      helperText: helperText,\n      id: \"post-input\",\n      label: \"Type your post!\",\n      multiline: true,\n      rowsMax: \"8\",\n      variant: \"filled\",\n      value: value,\n      onChange: handleChange,\n      fullWidth: true,\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), React.createElement(ListItem, {\n    key: \"post-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItemText, {\n    primary: React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: isError,\n      onClick: onPost,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, \"Post\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  })), React.createElement(ListItem, {\n    key: \"logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItemText, {\n    primary: React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: signOut,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"Logout\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/bhavan/Project/src/containers/Sidebar.js"],"names":["React","makeStyles","Button","Drawer","List","ListItem","ListItemText","TextField","ListItemIcon","Person","PersonIcon","Public","PublicIcon","API","graphqlOperation","Auth","createPost","useHistory","drawerWidth","MAX_POST_CONTENT_LENGTH","useStyles","theme","drawer","width","flexShrink","position","drawerPaper","toolbar","mixins","textField","list","Sidebar","activeListItem","classes","history","useState","value","setValue","isError","setIsError","helperText","setHelperText","handleChange","event","target","length","onPost","graphql","input","type","content","timestamp","Math","floor","Date","now","res","console","log","signOut","then","data","catch","err","paper","currentAuthenticatedUser","user","push","username"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {View} from \"react-native\";\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  TextField,\r\n  ListItemIcon,\r\n} from '@material-ui/core';\r\nimport {\r\n  Person as PersonIcon,\r\n  Public as PublicIcon,\r\n} from '@material-ui/icons';\r\n\r\nimport API, { graphqlOperation } from '@aws-amplify/api';\r\nimport Auth from '@aws-amplify/auth';\r\n\r\nimport { createPost } from '../graphql/mutations';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst drawerWidth = 340;\r\nconst MAX_POST_CONTENT_LENGTH = 140;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    position: 'relative',\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    position: 'relative',\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  textField: {\r\n    width: drawerWidth,\r\n  },\r\n  list: {\r\n    // overflowWrap: 'break-word',\r\n    width: 300,\r\n  },\r\n}));\r\n\r\nexport default function Sidebar({activeListItem}) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [value, setValue] = React.useState('');\r\n  const [isError, setIsError] = React.useState(false);\r\n  const [helperText, setHelperText] = React.useState('');\r\n\r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n    if (event.target.value.length > MAX_POST_CONTENT_LENGTH) {\r\n      setIsError(true);\r\n      setHelperText(MAX_POST_CONTENT_LENGTH - event.target.value.length);\r\n    } else {\r\n      setIsError(false);\r\n      setHelperText('');\r\n    }\r\n  };\r\n\r\n  const onPost = async () => {\r\n    const res = await API.graphql(graphqlOperation(createPost, { input: {\r\n      type: 'post',\r\n      content: value,\r\n      timestamp: Math.floor(Date.now() / 1000),\r\n    }})); \r\n\r\n    console.log(res)\r\n    setValue('');\r\n  }\r\n\r\n  const signOut = () => {\r\n    Auth.signOut()\r\n      .then(data => console.log(data))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n      anchor=\"left\"\r\n    >\r\n      <View className={classes.toolbar} />\r\n      <List>\r\n        <ListItem\r\n          button\r\n          selected={activeListItem === 'global-timeline'}\r\n          onClick={() => {\r\n            Auth.currentAuthenticatedUser().then((user) => {\r\n              history.push('/global-timeline');\r\n            })\r\n          }}\r\n          key='global-timeline'\r\n        >\r\n          <ListItemIcon>\r\n            <PublicIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Global Timeline\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={activeListItem === 'profile'}\r\n          onClick={() => {\r\n            Auth.currentAuthenticatedUser().then((user) => {\r\n              history.push('/' + user.username);\r\n            })\r\n          }}\r\n          key='profile'\r\n        >\r\n          <ListItemIcon>\r\n            <PersonIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Profile\" />\r\n        </ListItem>\r\n        <ListItem key='post-input-field'>\r\n          <ListItemText primary={\r\n            <TextField\r\n              error={isError}\r\n              helperText={helperText}\r\n              id=\"post-input\"\r\n              label=\"Type your post!\"\r\n              multiline\r\n              rowsMax=\"8\"\r\n              variant=\"filled\"\r\n              value={value}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          } />\r\n        </ListItem>\r\n        <ListItem key='post-button'>\r\n          <ListItemText primary={\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={isError}\r\n              onClick={onPost}\r\n              fullWidth\r\n            >\r\n              Post\r\n            </Button>\r\n          } />\r\n        </ListItem>\r\n        <ListItem key='logout'>\r\n          <ListItemText primary={\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={signOut}\r\n              fullWidth\r\n            >\r\n              Logout\r\n            </Button>\r\n          } />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}