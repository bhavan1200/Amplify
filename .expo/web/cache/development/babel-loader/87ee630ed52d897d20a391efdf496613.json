{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bhavan\\\\Project\\\\screens\\\\StartGameScreen.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Card from \"../components/Card\";\nimport Input from \"../components/Input\";\nimport Colors from \"../constants/colors\";\n\nvar StartGameScreen = function StartGameScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g, ''));\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Start a New Game!\"), React.createElement(Card, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Select a Number\"), React.createElement(Input, {\n    style: styles.input,\n    blurOnSubmit: true,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    keyboardType: \"number-pad\",\n    maxLength: 2,\n    onChangeText: numberInputHandler,\n    value: enteredValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Reset\",\n    onPress: function onPress() {},\n    color: Colors.accent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: function onPress() {},\n    color: Colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10\n  },\n  inputContainer: {\n    width: 300,\n    maxWidth: '80%',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    paddingHorizontal: 15\n  },\n  button: {\n    width: 100\n  },\n  input: {\n    width: 50,\n    textAlign: 'center'\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"sources":["C:/Users/bhavan/Project/screens/StartGameScreen.js"],"names":["React","useState","Card","Input","Colors","StartGameScreen","props","enteredValue","setEnteredValue","numberInputHandler","inputText","replace","Keyboard","dismiss","styles","screen","title","inputContainer","input","buttonContainer","button","accent","primary","StyleSheet","create","flex","padding","alignItems","fontSize","marginVertical","width","maxWidth","flexDirection","justifyContent","paddingHorizontal","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Button,\r\n  TouchableWithoutFeedback,\r\n  Keyboard\r\n} from 'react-native';\r\n\r\nimport Card from '../components/Card';\r\nimport Input from '../components/Input';\r\nimport Colors from '../constants/colors';\r\n\r\nconst StartGameScreen = props => {\r\n  const [enteredValue, setEnteredValue] = useState('');\r\n\r\n  const numberInputHandler = inputText => {\r\n    setEnteredValue(inputText.replace(/[^0-9]/g, ''));\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback\r\n      onPress={() => {\r\n        Keyboard.dismiss();\r\n      }}\r\n    >\r\n      <View style={styles.screen}>\r\n        <Text style={styles.title}>Start a New Game!</Text>\r\n        <Card style={styles.inputContainer}>\r\n          <Text>Select a Number</Text>\r\n          <Input\r\n            style={styles.input}\r\n            blurOnSubmit\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            keyboardType=\"number-pad\"\r\n            maxLength={2}\r\n            onChangeText={numberInputHandler}\r\n            value={enteredValue}\r\n          />\r\n          <View style={styles.buttonContainer}>\r\n            <View style={styles.button}>\r\n              <Button title=\"Reset\" onPress={() => {}} color={Colors.accent} />\r\n            </View>\r\n            <View style={styles.button}>\r\n              <Button\r\n                title=\"Confirm\"\r\n                onPress={() => {}}\r\n                color={Colors.primary}\r\n              />\r\n            </View>\r\n          </View>\r\n        </Card>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    padding: 10,\r\n    alignItems: 'center'\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    marginVertical: 10\r\n  },\r\n  inputContainer: {\r\n    width: 300,\r\n    maxWidth: '80%',\r\n    alignItems: 'center'\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n    paddingHorizontal: 15\r\n  },\r\n  button: {\r\n    width: 100\r\n  },\r\n  input: {\r\n    width: 50,\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default StartGameScreen;\r\n"]},"metadata":{},"sourceType":"module"}