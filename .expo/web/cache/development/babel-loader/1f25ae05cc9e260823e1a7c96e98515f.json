{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhavan\\\\Project\\\\navigation\\\\index.js\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Octicons, MaterialCommunityIcons, MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport ChatRoomScreen from \"../screens/ChatRoomScreen\";\nimport { RootStackParamList } from \"../types\";\nimport MainTabNavigator from \"./MainTabNavigator\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport Colors from \"../constants/Colors\";\nimport ContactsScreen from \"../screens/ContactsScreen\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Stack = createStackNavigator < RootStackParamList > function RootNavigator() {\n  var _this = this;\n\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.light.tint,\n        shadowOpacity: 0,\n        elevation: 0\n      },\n      headerTintColor: Colors.light.background,\n      headerTitleAlign: 'left',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: MainTabNavigator,\n    options: {\n      title: \"WhatsApp\",\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            width: 60,\n            justifyContent: 'space-between',\n            marginRight: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }\n        }, React.createElement(Octicons, {\n          name: \"search\",\n          size: 22,\n          color: 'white',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }\n        }), React.createElement(MaterialCommunityIcons, {\n          name: \"dots-vertical\",\n          size: 22,\n          color: 'white',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ChatRoom\",\n    component: ChatRoomScreen,\n    options: function options(_ref2) {\n      var route = _ref2.route;\n      return {\n        title: route.params.name,\n        headerRight: function headerRight() {\n          return React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              width: 100,\n              justifyContent: 'space-between',\n              marginRight: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }\n          }, React.createElement(FontAwesome5, {\n            name: \"video\",\n            size: 22,\n            color: 'white',\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }\n          }), React.createElement(MaterialIcons, {\n            name: \"call\",\n            size: 22,\n            color: 'white',\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }\n          }), React.createElement(MaterialCommunityIcons, {\n            name: \"dots-vertical\",\n            size: 22,\n            color: 'white',\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Contacts\",\n    component: ContactsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/bhavan/Project/navigation/index.js"],"names":["NavigationContainer","DefaultTheme","DarkTheme","createStackNavigator","React","ColorSchemeName","Octicons","MaterialCommunityIcons","MaterialIcons","FontAwesome5","NotFoundScreen","ChatRoomScreen","RootStackParamList","MainTabNavigator","LinkingConfiguration","Colors","ContactsScreen","Navigation","colorScheme","Stack","RootNavigator","headerStyle","backgroundColor","light","tint","shadowOpacity","elevation","headerTintColor","background","headerTitleAlign","headerTitleStyle","fontWeight","title","headerRight","flexDirection","width","justifyContent","marginRight","route","params","name"],"mappings":"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","sourcesContent":["import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport {ColorSchemeName, View} from 'react-native';\r\nimport {\r\n  Octicons,\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  FontAwesome5,\r\n} from '@expo/vector-icons';\r\n\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport ChatRoomScreen from '../screens/ChatRoomScreen';\r\nimport { RootStackParamList } from '../types';\r\nimport MainTabNavigator from './MainTabNavigator';\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport Colors from \"../constants/Colors\";\r\nimport ContactsScreen from \"../screens/ContactsScreen\";\r\n\r\n// If you are not familiar with React Navigation, we recommend going through the\r\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n// A root stack navigator is often used for displaying modals on top of all other content\r\n// Read more here: https://reactnavigation.org/docs/modal\r\nconst Stack = createStackNavigator<RootStackParamList>\r\n\r\nfunction RootNavigator() {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerStyle: {\r\n        backgroundColor: Colors.light.tint,\r\n        shadowOpacity: 0,\r\n        elevation: 0,\r\n      },\r\n      headerTintColor: Colors.light.background,\r\n      headerTitleAlign: 'left',\r\n      headerTitleStyle: {\r\n        fontWeight: 'bold',\r\n      }\r\n    }}>\r\n      <Stack.Screen\r\n        name=\"Root\"\r\n        component={MainTabNavigator}\r\n        options={{\r\n          title: \"WhatsApp\",\r\n          headerRight: () => (\r\n            <View style={{\r\n              flexDirection: 'row',\r\n              width: 60,\r\n              justifyContent: 'space-between',\r\n              marginRight: 10,\r\n            }}>\r\n              <Octicons name=\"search\" size={22} color={'white'} />\r\n              <MaterialCommunityIcons name=\"dots-vertical\" size={22} color={'white'} />\r\n            </View>\r\n          )\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"ChatRoom\"\r\n        component={ChatRoomScreen}\r\n        options={({ route })  => ({\r\n          title: route.params.name,\r\n          headerRight: () => (\r\n            <View style={{\r\n              flexDirection: 'row',\r\n              width: 100,\r\n              justifyContent: 'space-between',\r\n              marginRight: 10,\r\n            }}>\r\n              <FontAwesome5 name=\"video\" size={22} color={'white'} />\r\n              <MaterialIcons name=\"call\" size={22} color={'white'} />\r\n              <MaterialCommunityIcons name=\"dots-vertical\" size={22} color={'white'} />\r\n            </View>\r\n          )\r\n        })}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Contacts\"\r\n        component={ContactsScreen}\r\n      />\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n    </Stack.Navigator>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}