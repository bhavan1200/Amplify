{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bhavan\\\\Project\\\\navigation\\\\tabs.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport HomeStackScreen from \"../screens/HomeScreen\";\nimport ChatStackScreen from \"../screens/ChatScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport FindScreen from \"../screens/FindScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nvar size = 32;\nvar Tab = createBottomTabNavigator();\n\nvar Tabs = function Tabs() {\n  var getTabBarVisibility = function getTabBarVisibility(route) {\n    var routeName = route.this.state ? route.state.routes[route.state.index].name : \"\";\n\n    if (routeName === 'Chat') {\n      return false;\n    }\n\n    return true;\n  };\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Chat\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              style = _ref2.style;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (route.name === \"Find\") {\n            iconName = focused ? \"list-circle\" : \"list-circle-outline\";\n          } else if (route.name === \"Settings\") {\n            iconName = focused ? \"settings\" : \"settings-outline\";\n          } else {\n            iconName = focused ? \"chatbox\" : \"chatbox-ellipses\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 18\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"tomato\",\n      inactiveTintColor: \"gray\",\n      labelStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Find\",\n    component: FindScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Chat\",\n    component: ChatStackScreen,\n    options: function options(_ref3) {\n      var route = _ref3.route;\n      return {\n        tabBarVisible: getTabBarVisibility(route)\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  shadow: {\n    shadowColor: \"#7F5Df0\",\n    shadowOffset: {\n      width: 0,\n      height: 10\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.5,\n    elevation: 5\n  }\n});\nexport default Tabs;","map":{"version":3,"sources":["C:/Users/bhavan/Project/navigation/tabs.js"],"names":["React","createBottomTabNavigator","HomeStackScreen","ChatStackScreen","SettingsScreen","FindScreen","Ionicons","size","Tab","Tabs","getTabBarVisibility","route","routeName","this","state","routes","index","name","tabBarIcon","focused","color","style","iconName","activeTintColor","inactiveTintColor","labelStyle","fontWeight","tabBarVisible","styles","StyleSheet","create","shadow","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, View, Text, Image, TouchableOpacity } from \"react-native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport HomeStackScreen from \"../screens/HomeScreen\";\r\nimport ChatStackScreen from \"../screens/ChatScreen\";\r\nimport SettingsScreen from \"../screens/SettingsScreen\";\r\nimport FindScreen from \"../screens/FindScreen\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nconst size = 32;\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst Tabs = () => {\r\n  const getTabBarVisibility = (route) => {\r\n    const routeName = route.this.state\r\n    ? route.state.routes[route.state.index].name\r\n    : \"\";\r\n    if (routeName === 'Chat'){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Chat\"\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, style }) => {\r\n          let iconName;\r\n          if (route.name === \"Home\") {\r\n            iconName = focused ? \"home\" : \"home-outline\";\r\n          } else if (route.name === \"Find\") {\r\n            iconName = focused ? \"list-circle\" : \"list-circle-outline\";\r\n          } else if (route.name === \"Settings\") {\r\n            iconName = focused ? \"settings\" : \"settings-outline\";\r\n          } else {\r\n            iconName = focused ? \"chatbox\" : \"chatbox-ellipses\";\r\n          }\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n      })}\r\n      tabBarOptions={{\r\n        // activeBackgroundColor:\"black\",\r\n        activeTintColor: \"tomato\",\r\n        inactiveTintColor: \"gray\",\r\n        labelStyle:{\r\n          fontWeight:\"bold\"\r\n        }\r\n      }}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={HomeStackScreen} />\r\n      <Tab.Screen name=\"Find\" component={FindScreen} />\r\n      <Tab.Screen name=\"Settings\" component={SettingsScreen} />\r\n      <Tab.Screen \r\n        name=\"Chat\" \r\n        component={ChatStackScreen} \r\n        options={({route}) => ({\r\n          tabBarVisible: getTabBarVisibility(route)\r\n        })}\r\n     />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  shadow: {\r\n    shadowColor: \"#7F5Df0\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 10,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.5,\r\n    elevation: 5,\r\n  },\r\n});\r\n\r\nexport default Tabs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//const CustomTabBarButton = ({ children, onPress }) => {\r\n  //   return (\r\n  //     <TouchableOpacity\r\n  //       style={{\r\n  //         top: -30,\r\n  //         alignItems: \"center\",\r\n  //         justifyContent: \"center\",\r\n  //         ...styles.shadow,\r\n  //       }}\r\n  //       onPress={onPress}\r\n  //     >\r\n  //       <View\r\n  //         style={{\r\n  //           width: 70,\r\n  //           height: 70,\r\n  //           borderRadius: 35,\r\n  //           backgroundColor: \"#e32f45\",\r\n  //         }}\r\n  //       >\r\n  //         {children}\r\n  //       </View>\r\n  //     </TouchableOpacity>\r\n  //   );\r\n  // };"]},"metadata":{},"sourceType":"module"}