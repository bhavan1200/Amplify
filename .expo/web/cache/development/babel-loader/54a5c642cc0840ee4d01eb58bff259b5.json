{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bhavan\\\\Project\\\\screens\\\\ChatScreen.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ChatListItem from \"../components/ChatListItem/index\";\nimport NewMessageButton from \"../components/NewMessageButtton\";\nimport { API, graphqlOperation, Auth } from \"aws-amplify\";\nimport { getUser } from \"./queries\";\nexport var ChatScreen = function ChatScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatRooms = _useState2[0],\n      setChatRooms = _useState2[1];\n\n  useEffect(function () {\n    var fetchChatRooms = function fetchChatRooms() {\n      var userInfo, userData;\n      return _regeneratorRuntime.async(function fetchChatRooms$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 3:\n              userInfo = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getUser, {\n                id: userInfo.attributes.sub\n              })));\n\n            case 6:\n              userData = _context.sent;\n              setChatRooms(userData.data.getUser.chatRoomUser.items);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    };\n\n    fetchChatRooms();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      width: \"100%\"\n    },\n    data: chatRooms,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ChatListItem, {\n        chatRoom: item.chatRoom,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 35\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(NewMessageButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\nexport default ChatScreen;","map":{"version":3,"sources":["C:/Users/bhavan/Project/screens/ChatScreen.tsx"],"names":["React","useEffect","useState","ChatListItem","NewMessageButton","API","graphqlOperation","Auth","getUser","ChatScreen","chatRooms","setChatRooms","fetchChatRooms","currentAuthenticatedUser","userInfo","graphql","id","attributes","sub","userData","data","chatRoomUser","items","console","log","flex","justifyContent","alignItems","width","item","chatRoom"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,OAAOC,YAAP;AAEA,OAAOC,gBAAP;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,IAAhC,QAA4C,aAA5C;AACA,SAASC,OAAT;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAE9B,kBAAkCP,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOQ,SAAP;AAAA,MAAkBC,YAAlB;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEIL,IAAI,CAACM,wBAAL,EAFJ;;AAAA;AAEbC,cAAAA,QAFa;AAAA;AAAA,+CAIIT,GAAG,CAACU,OAAJ,CACrBT,gBAAgB,CACdE,OADc,EACL;AACPQ,gBAAAA,EAAE,EAAEF,QAAQ,CAACG,UAAT,CAAoBC;AADjB,eADK,CADK,CAJJ;;AAAA;AAIbC,cAAAA,QAJa;AAYnBR,cAAAA,YAAY,CAACQ,QAAQ,CAACC,IAAT,CAAcZ,OAAd,CAAsBa,YAAtB,CAAmCC,KAApC,CAAZ;AAZmB;AAAA;;AAAA;AAAA;AAAA;AAenBC,cAAAA,OAAO,CAACC,GAAR;;AAfmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB;;AAmBAZ,IAAAA,cAAc;AACf,GArBQ,EAqBN,EArBM,CAAT;AAsBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEa,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADT;AAEE,IAAA,IAAI,EAAElB,SAFR;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGmB,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAEA,IAAI,CAACC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAHd;AAIE,IAAA,YAAY,EAAE,sBAACD,IAAD;AAAA,aAAUA,IAAI,CAACb,EAAf;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CArCM;AAuCP,eAAeP,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, FlatList } from \"react-native\";\r\nimport ChatListItem from \"../components/ChatListItem/index\";\r\nimport chatRooms from \"../data/ChatRooms\";\r\nimport NewMessageButton from \"../components/NewMessageButtton\";\r\nimport { API, graphqlOperation, Auth } from \"aws-amplify\";\r\nimport { getUser } from \"./queries\";\r\n\r\nexport const ChatScreen = () => {\r\n\r\n  const [chatRooms, setChatRooms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchChatRooms = async () => {\r\n      try {\r\n        const userInfo = await Auth.currentAuthenticatedUser();\r\n\r\n        const userData = await API.graphql(\r\n          graphqlOperation(\r\n            getUser, {\r\n              id: userInfo.attributes.sub,\r\n            }\r\n          )\r\n        )\r\n\r\n        setChatRooms(userData.data.getUser.chatRoomUser.items)\r\n        // console.log(userData.data.getUser.chatRoomUser.items);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n\r\n    fetchChatRooms();\r\n  }, []);\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <FlatList\r\n        style={{ width: \"100%\" }}\r\n        data={chatRooms}\r\n        renderItem={({ item }) => <ChatListItem chatRoom={item.chatRoom} />}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n      <NewMessageButton />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ChatScreen;\r\n"]},"metadata":{},"sourceType":"module"}