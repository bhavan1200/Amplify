{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bhavan\\\\Project\\\\components\\\\InputBox\\\\index.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./styles\";\nimport { API, Auth, graphqlOperation } from \"aws-amplify\";\nimport { createMessage } from \"../../src/graphql/mutations\";\nimport { MaterialCommunityIcons, MaterialIcons, Entypo, Fontisto, FontAwesome5 } from \"@expo/vector-icons\";\n\nvar InputBox = function InputBox() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      myUserId = _useState4[0],\n      setMyUserId = _useState4[1];\n\n  useEffect(function () {\n    var fetchUser = function fetchUser() {\n      var userInfo;\n      return _regeneratorRuntime.async(function fetchUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 2:\n              userInfo = _context.sent;\n              setMyUserId(userInfo.attributes.sub);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  }, []);\n\n  var onMichroPhonePress = function onMichroPhonePress() {\n    console.warn(\"MicroPhone\");\n  };\n\n  var onSendPress = function onSendPress() {\n    return _regeneratorRuntime.async(function onSendPress$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createMessage, {\n              input: {}\n            })));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var onPress = function onPress() {\n    if (!message) {\n      onMichroPhonePress();\n    } else {\n      onSendPress();\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"laugh-beam\",\n    size: 24,\n    color: \"grey\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"type a message\",\n    multiline: true,\n    style: styles.textInput,\n    value: message,\n    onChangeText: setMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(Entypo, {\n    name: \"attachment\",\n    size: 24,\n    color: \"grey\",\n    style: styles.icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), !message && React.createElement(Fontisto, {\n    name: \"camera\",\n    size: 24,\n    color: \"grey\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, !message ? React.createElement(MaterialCommunityIcons, {\n    name: \"microphone\",\n    size: 28,\n    color: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }) : React.createElement(MaterialIcons, {\n    name: \"send\",\n    size: 28,\n    color: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default InputBox;","map":{"version":3,"sources":["C:/Users/bhavan/Project/components/InputBox/index.tsx"],"names":["React","useEffect","useState","styles","API","Auth","graphqlOperation","createMessage","MaterialCommunityIcons","MaterialIcons","Entypo","Fontisto","FontAwesome5","InputBox","message","setMessage","myUserId","setMyUserId","fetchUser","currentAuthenticatedUser","userInfo","attributes","sub","onMichroPhonePress","console","warn","onSendPress","graphql","input","log","onPress","container","mainContainer","textInput","icon","buttonContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, TextInput, TouchableOpacity } from \"react-native\";\r\nimport styles from \"./styles\";\r\nimport { API, Auth, graphqlOperation} from \"aws-amplify\";\r\nimport {createMessage} from \"../../src/graphql/mutations\"\r\n\r\nimport {\r\n  MaterialCommunityIcons,\r\n  MaterialIcons,\r\n  Entypo,\r\n  Fontisto,\r\n  FontAwesome5,\r\n} from \"@expo/vector-icons\";\r\n\r\nconst InputBox = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [myUserId, setMyUserId] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const userInfo = await Auth.currentAuthenticatedUser();\r\n       setMyUserId(userInfo.attributes.sub);\r\n    }\r\n  }, [])\r\n\r\n  \r\n  const onMichroPhonePress = () => {\r\n      console.warn(\"MicroPhone\")\r\n  }\r\n\r\n  const onSendPress = async () => {\r\n      try{\r\n         await API.graphql(\r\n           graphqlOperation(\r\n             createMessage, {\r\n               input: {\r\n                 \r\n               }\r\n             }\r\n           )\r\n         )\r\n\r\n      } catch (e) {\r\n\r\n        console.log(e)\r\n      }\r\n  }\r\n\r\n  const onPress = () => {\r\n      if(!message){\r\n          onMichroPhonePress();\r\n      } else {\r\n         onSendPress();\r\n      }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.mainContainer}>\r\n        <FontAwesome5 name=\"laugh-beam\" size={24} color=\"grey\" />\r\n        <TextInput\r\n          placeholder=\"type a message\"\r\n          multiline\r\n          style={styles.textInput}\r\n          value={message}\r\n          onChangeText={setMessage}\r\n        />\r\n        <Entypo name=\"attachment\" size={24} color=\"grey\" style={styles.icon} />\r\n        {!message && <Fontisto name=\"camera\" size={24} color=\"grey\" />}\r\n      </View>\r\n      <TouchableOpacity onPress={onPress}>\r\n        <View style={styles.buttonContainer}>\r\n          {!message ? (\r\n            <MaterialCommunityIcons name=\"microphone\" size={28} color=\"#fff\" />\r\n          ) : (\r\n            <MaterialIcons name=\"send\" size={28} color=\"#fff\" />\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n"]},"metadata":{},"sourceType":"module"}