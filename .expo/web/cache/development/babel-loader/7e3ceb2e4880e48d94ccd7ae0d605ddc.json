{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bhavan\\\\Project\\\\components\\\\ContactListItem\\\\index.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport styles from \"./style\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { API, graphqlOperation, Auth } from \"aws-amplify\";\nimport { createChatRoom, createChatRoomUser } from \"../../src/graphql/mutations\";\n\nvar ContactListItem = function ContactListItem(props) {\n  var user = props.user;\n  var navigation = useNavigation();\n\n  var onClick = function onClick() {\n    var newChatRoomData, newChatRoom, userInfo;\n    return _regeneratorRuntime.async(function onClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoom, {\n              input: {}\n            })));\n\n          case 3:\n            newChatRoomData = _context.sent;\n\n            if (newChatRoomData.data) {\n              _context.next = 7;\n              break;\n            }\n\n            console.log(\"failed to create a chat room \");\n            return _context.abrupt(\"return\");\n\n          case 7:\n            newChatRoom = newChatRoomData.data.createChatRoom;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoomUser, {\n              input: {\n                userID: user.id,\n                chatRoomID: newChatRoom.id\n              }\n            })));\n\n          case 10:\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n          case 12:\n            userInfo = _context.sent;\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoomUser, {\n              input: {\n                userID: userInfo.attributes.sub,\n                chatRoomID: newChatRoom.id\n              }\n            })));\n\n          case 15:\n            navigation.navigate(\"ChatRoom\", {\n              id: newChatRoom.id,\n              name: \"Hardcoded Name\"\n            });\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 18]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.lefContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: user.imageUri\n    },\n    style: styles.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.midContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.username,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, user.name), React.createElement(Text, {\n    numberOfLines: 2,\n    style: styles.status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, user.status)))));\n};\n\nexport default ContactListItem;","map":{"version":3,"sources":["C:/Users/bhavan/Project/components/ContactListItem/index.tsx"],"names":["React","styles","useNavigation","API","graphqlOperation","Auth","createChatRoom","createChatRoomUser","ContactListItem","props","user","navigation","onClick","graphql","input","newChatRoomData","data","console","log","newChatRoom","userID","id","chatRoomID","currentAuthenticatedUser","userInfo","attributes","sub","navigate","name","container","lefContainer","uri","imageUri","avatar","midContainer","username","status"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, Image, TouchableWithoutFeedback } from \"react-native\";\r\nimport { User } from \"../../types\";\r\nimport styles from \"./style\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { API, graphqlOperation, Auth  } from \"aws-amplify\";\r\nimport { createChatRoom, createChatRoomUser } from \"../../src/graphql/mutations\";\r\n\r\n\r\nexport type ContactListItemProps = {\r\n    user: User;\r\n  }\r\n\r\nconst ContactListItem = (props: ContactListItemProps) => {\r\n  const { user } = props;\r\n  const navigation = useNavigation();\r\n\r\n\r\n  const onClick =async() => {\r\n    try{\r\n      const newChatRoomData = await API.graphql(\r\n        graphqlOperation(\r\n          createChatRoom, {\r\n            input: {}\r\n          }\r\n        )\r\n      )\r\n      if(!newChatRoomData.data) {\r\n        console.log(\"failed to create a chat room \");\r\n        return;\r\n    } \r\n\r\n    const newChatRoom = newChatRoomData.data.createChatRoom;\r\n    \r\n     await API.graphql(\r\n      graphqlOperation(\r\n        createChatRoomUser, {\r\n          input:{\r\n            userID: user.id ,\r\n          chatRoomID: newChatRoom.id ,\r\n          }\r\n          \r\n        }\r\n      )\r\n    )\r\n    const userInfo = await Auth.currentAuthenticatedUser();\r\n    await API.graphql(\r\n      graphqlOperation(\r\n        createChatRoomUser, {\r\n          input:{\r\n            userID: userInfo.attributes.sub ,\r\n            chatRoomID: newChatRoom.id ,\r\n          }\r\n         \r\n        }\r\n      )\r\n    )\r\n\r\n    navigation.navigate(\"ChatRoom\", {\r\n      id: newChatRoom.id,\r\n      name: \"Hardcoded Name\"\r\n    })\r\n \r\n\r\n  }catch (e) { \r\n    console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={onClick}>\r\n      <View style={styles.container}>\r\n        <View style={styles.lefContainer}>\r\n          <Image source={{ uri: user.imageUri }} style={styles.avatar} />\r\n\r\n          <View style={styles.midContainer}>\r\n            <Text style={styles.username}>{user.name}</Text>\r\n            <Text numberOfLines={2} style={styles.status}>{user.status}</Text>\r\n          </View>\r\n        </View>\r\n\r\n       \r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n"]},"metadata":{},"sourceType":"module"}