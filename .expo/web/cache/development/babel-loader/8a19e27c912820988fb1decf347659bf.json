{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bhavan\\\\Project\\\\components\\\\ContactListItem\\\\index.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport styles from \"./style\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { createChatRoom, createChatRoomUser } from \"../../src/graphql/mutations\";\n\nvar ContactListItem = function ContactListItem(props) {\n  var user = props.user;\n  var navigation = useNavigation();\n\n  var onClick = function onClick() {\n    var newChatRoomData, newChatRoom, newUserChatRoom;\n    return _regeneratorRuntime.async(function onClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoom, {\n              input: {}\n            })));\n\n          case 3:\n            newChatRoomData = _context.sent;\n\n            if (!newChatRoomData.data) {\n              console.log(\"Failed To Load\");\n            }\n\n            newChatRoom = newChatRoomData.data.createChatRoom;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createChatRoomUser, {})));\n\n          case 8:\n            newUserChatRoom = _context.sent;\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.lefContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: user.imageUri\n    },\n    style: styles.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.midContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.username,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, user.name), React.createElement(Text, {\n    numberOfLines: 2,\n    style: styles.status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, user.status)))));\n};\n\nexport default ContactListItem;","map":{"version":3,"sources":["C:/Users/bhavan/Project/components/ContactListItem/index.tsx"],"names":["React","styles","useNavigation","API","graphqlOperation","createChatRoom","createChatRoomUser","ContactListItem","props","user","navigation","onClick","graphql","input","newChatRoomData","data","console","log","newChatRoom","newUserChatRoom","container","lefContainer","uri","imageUri","avatar","midContainer","username","name","status"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;;;;;AAGA,OAAOC,MAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,GAAT,EAAcC,gBAAd,QAA6C,aAA7C;AACA,SAASC,cAAT,EAAyBC,kBAAzB;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAiC;AACvD,MAAQC,IAAR,GAAiBD,KAAjB,CAAQC,IAAR;AACA,MAAMC,UAAU,GAAGR,aAAa,EAAhC;;AAEA,MAAMS,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEqBR,GAAG,CAACS,OAAJ,CAC5BR,gBAAgB,CACdC,cADc,EACE;AACdQ,cAAAA,KAAK,EAAE;AADO,aADF,CADY,CAFrB;;AAAA;AAEHC,YAAAA,eAFG;;AASV,gBAAG,CAACA,eAAe,CAACC,IAApB,EAAyB;AACvBC,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;;AACKC,YAAAA,WAZI,GAYUJ,eAAe,CAACC,IAAhB,CAAqBV,cAZ/B;AAAA;AAAA,6CAaqBF,GAAG,CAACS,OAAJ,CAC5BR,gBAAgB,CACdE,kBADc,EACM,EADN,CADY,CAbrB;;AAAA;AAaHa,YAAAA,eAbG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsBZH,YAAAA,OAAO,CAACC,GAAR;;AAtBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AA+EA,SACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEN,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACmB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACoB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEb,IAAI,CAACc;AAAZ,KAAf;AAAuC,IAAA,KAAK,EAAEtB,MAAM,CAACuB,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACwB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,MAAM,CAACyB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BjB,IAAI,CAACkB,IAApC,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAE1B,MAAM,CAAC2B,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CnB,IAAI,CAACmB,MAApD,CAFF,CAHF,CADF,CADF,CADF;AAgBD,CAnGD;;AAqGA,eAAerB,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, Image, TouchableWithoutFeedback } from \"react-native\";\r\nimport { User } from \"../../types\";\r\nimport styles from \"./style\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { API, graphqlOperation, Auth  } from \"aws-amplify\";\r\nimport { createChatRoom, createChatRoomUser } from \"../../src/graphql/mutations\";\r\n\r\n\r\nexport type ContactListItemProps = {\r\n    user: User;\r\n  }\r\n\r\nconst ContactListItem = (props: ContactListItemProps) => {\r\n  const { user } = props;\r\n  const navigation = useNavigation();\r\n\r\n  const onClick = async () => {\r\n    try{\r\n         const newChatRoomData = await API.graphql(\r\n           graphqlOperation(\r\n             createChatRoom, {\r\n               input: { }\r\n             }\r\n           )\r\n         )\r\n        if(!newChatRoomData.data){\r\n          console.log(\"Failed To Load\")\r\n        }\r\n        const newChatRoom = newChatRoomData.data.createChatRoom;\r\n         const newUserChatRoom = await API.graphql(\r\n           graphqlOperation(\r\n             createChatRoomUser, {\r\n               \r\n             }\r\n           )\r\n         )\r\n\r\n    } catch(e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n\r\n  // const onClick = \r\n  // async() => {\r\n  //   try{\r\n  //     const newChatRoomData = await API.graphql(\r\n  //       graphqlOperation(\r\n  //         createChatRoom, {\r\n  //           input: {}\r\n  //         }\r\n  //       )\r\n  //     )\r\n  //     if(!newChatRoomData.data) {\r\n  //       console.log(\"failed to create a chat room \");\r\n  //       return;\r\n  //   } \r\n\r\n  //   const newChatRoom = newChatRoomData.data.createChatRoom;\r\n    \r\n  //    await API.graphql(\r\n  //     graphqlOperation(\r\n  //       createChatRoomUser, {\r\n  //         input:{\r\n  //           userID: user.id ,\r\n  //         chatRoomID: newChatRoom.id ,\r\n  //         }\r\n          \r\n  //       }\r\n  //     )\r\n  //   )\r\n  //   const userInfo = await Auth.currentAuthenticatedUser();\r\n  //   await API.graphql(\r\n  //     graphqlOperation(\r\n  //       createChatRoomUser, {\r\n  //         input:{\r\n  //           userID: userInfo.attributes.sub ,\r\n  //           chatRoomID: newChatRoom.id ,\r\n  //         }\r\n         \r\n  //       }\r\n  //     )\r\n  //   )\r\n\r\n  //   navigation.navigate(\"ChatRoom\", {\r\n  //     id: newChatRoom.id,\r\n  //     name: \"Hardcoded Name\"\r\n  //   })\r\n \r\n\r\n  // }catch (e) { \r\n  //   console.log(e)\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={onClick}>\r\n      <View style={styles.container}>\r\n        <View style={styles.lefContainer}>\r\n          <Image source={{ uri: user.imageUri }} style={styles.avatar} />\r\n\r\n          <View style={styles.midContainer}>\r\n            <Text style={styles.username}>{user.name}</Text>\r\n            <Text numberOfLines={2} style={styles.status}>{user.status}</Text>\r\n          </View>\r\n        </View>\r\n\r\n       \r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n"]},"metadata":{},"sourceType":"module"}