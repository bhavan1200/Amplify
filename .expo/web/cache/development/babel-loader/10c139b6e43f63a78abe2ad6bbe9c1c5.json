{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bhavan\\\\Project\\\\App.js\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar App = function App() {\n  var _useState = useState(\" \"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredGoal = _useState2[0],\n      setEnteredGoal = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      courseGoal = _useState4[0],\n      setCourseGoal = _useState4[1];\n\n  var goalInputHandler = function goalInputHandler(enteredText) {\n    setEnteredGoal(enteredText);\n  };\n\n  var addGoalHandler = function addGoalHandler() {\n    setCourseGoal(function (currentGoals) {\n      return [].concat(_toConsumableArray(currentGoals), [{\n        key: Math.random().toString(),\n        value: enteredGoal\n      }]);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Course Goal\",\n    style: styles.input,\n    onChangeText: goalInputHandler,\n    value: enteredGoal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Add\",\n    onPress: addGoalHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    data: courseGoal,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(View, {\n        style: styles.listItems,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, itemData.item.value));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 20\n  },\n  inputWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  input: {\n    borderBottomColor: \"black\",\n    borderBottomWidth: 1,\n    padding: 10,\n    width: \"80%\"\n  },\n  listItems: {\n    padding: 10,\n    margin: 10,\n    backgroundColor: \"yellow\",\n    borderLeftWidth: 2,\n    borderBottomColor: \"black\"\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/bhavan/Project/App.js"],"names":["React","useState","App","enteredGoal","setEnteredGoal","courseGoal","setCourseGoal","goalInputHandler","enteredText","addGoalHandler","currentGoals","key","Math","random","toString","value","styles","container","inputWrapper","input","itemData","listItems","item","StyleSheet","create","paddingTop","flexDirection","justifyContent","alignItems","borderBottomColor","borderBottomWidth","padding","width","margin","backgroundColor","borderLeftWidth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;AAWA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,kBAAsCD,QAAQ,CAAC,GAAD,CAA9C;AAAA;AAAA,MAAOE,WAAP;AAAA,MAAoBC,cAApB;;AAEA,mBAAoCH,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOI,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD,EAAiB;AACxCJ,IAAAA,cAAc,CAACI,WAAD,CAAd;AACD,GAFD;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BH,IAAAA,aAAa,CAAC,UAACI,YAAD;AAAA,0CAAsBA,YAAtB,IAAoC;AAACC,QAAAA,GAAG,EAACC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAL;AAA+BC,QAAAA,KAAK,EAAGZ;AAAvC,OAApC;AAAA,KAAD,CAAb;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAC,aADd;AAEE,IAAA,KAAK,EAAEF,MAAM,CAACG,KAFhB;AAGE,IAAA,YAAY,EAAEZ,gBAHhB;AAIE,IAAA,KAAK,EAAEJ,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,OAAO,EAAEM,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAUE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEJ,UADR;AAEE,IAAA,UAAU,EAAE,oBAACe,QAAD;AAAA,aACV,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,QAAQ,CAACE,IAAT,CAAcP,KAArB,CADF,CADU;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAqBD,CAlCD;;AAoCA,IAAMC,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,UAAU,EAAE;AADH,GADoB;AAI/BP,EAAAA,YAAY,EAAE;AACZQ,IAAAA,aAAa,EAAE,KADH;AAEZC,IAAAA,cAAc,EAAE,eAFJ;AAGZC,IAAAA,UAAU,EAAE;AAHA,GAJiB;AAS/BT,EAAAA,KAAK,EAAE;AACLU,IAAAA,iBAAiB,EAAE,OADd;AAELC,IAAAA,iBAAiB,EAAE,CAFd;AAGLC,IAAAA,OAAO,EAAE,EAHJ;AAILC,IAAAA,KAAK,EAAE;AAJF,GATwB;AAe/BX,EAAAA,SAAS,EAAE;AACTU,IAAAA,OAAO,EAAE,EADA;AAETE,IAAAA,MAAM,EAAE,EAFC;AAGTC,IAAAA,eAAe,EAAE,QAHR;AAITC,IAAAA,eAAe,EAAE,CAJR;AAKTN,IAAAA,iBAAiB,EAAE;AALV;AAfoB,CAAlB,CAAf;AAuBA,eAAe3B,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  Button,\n  TextInput,\n  StyleSheet,\n  ScrollView,\n  FlatList,\n} from \"react-native\";\n\nconst App = () => {\n  const [enteredGoal, setEnteredGoal] = useState(\" \");\n\n  const [courseGoal, setCourseGoal] = useState([]);\n\n  const goalInputHandler = (enteredText) => {\n    setEnteredGoal(enteredText);\n  };\n\n  const addGoalHandler = () => {\n    setCourseGoal((currentGoals) => [...currentGoals, {key:Math.random().toString(), value : enteredGoal}]);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputWrapper}>\n        <TextInput\n          placeholder=\"Course Goal\"\n          style={styles.input}\n          onChangeText={goalInputHandler}\n          value={enteredGoal}\n        />\n        <Button title=\"Add\" onPress={addGoalHandler} />\n      </View>\n      <FlatList\n        data={courseGoal}\n        renderItem={(itemData) => (\n          <View style={styles.listItems}>\n            <Text>{itemData.item.value}</Text>\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 20,\n  },\n  inputWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  input: {\n    borderBottomColor: \"black\",\n    borderBottomWidth: 1,\n    padding: 10,\n    width: \"80%\",\n  },\n  listItems: {\n    padding: 10,\n    margin: 10,\n    backgroundColor: \"yellow\",\n    borderLeftWidth: 2,\n    borderBottomColor: \"black\",\n  },\n});\nexport default App;\n"]},"metadata":{},"sourceType":"module"}