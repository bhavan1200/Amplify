{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhavan\\\\Project\\\\src\\\\components\\\\PostLists.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, List, ListItem, Divider, ListItemText, ListItemAvatar, Avatar, Typography, CircularProgress } from '@material-ui/core';\nimport { useHistory } from 'react-router';\nimport moment from 'moment';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    listRoot: {\n      width: '100%',\n      wordBreak: 'break-all',\n      overflow: 'scroll',\n      borderRight: '1px solid #37444C'\n    },\n    alignCenter: {\n      textAlign: 'center'\n    },\n    loader: {\n      textAlign: 'center',\n      paddingTop: 20\n    },\n    maxWidth: {\n      width: '100%'\n    },\n    listHeader: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1200,\n      backgroundColor: '#15202B',\n      borderBottom: '1px solid #37444C'\n    },\n    clickable: {\n      cursor: 'pointer'\n    }\n  };\n});\nexport default function PostList(_ref) {\n  var _this = this;\n\n  var isLoading = _ref.isLoading,\n      posts = _ref.posts,\n      getAdditionalPosts = _ref.getAdditionalPosts,\n      listHeaderTitle = _ref.listHeaderTitle,\n      listHeaderTitleButton = _ref.listHeaderTitleButton;\n  var classes = useStyles();\n  return React.createElement(View, {\n    className: classes.listRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(View, {\n    className: classes.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(CircularProgress, {\n    size: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })) : React.createElement(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    className: classes.listHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    fontWeight: \"fontWeightBold\",\n    maxWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, listHeaderTitle, listHeaderTitleButton && listHeaderTitleButton)), posts.map(function (post) {\n    return React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, React.createElement(PostItem, {\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }), React.createElement(Divider, {\n      component: \"li\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }));\n  }), React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    className: classes.alignCenter,\n    key: \"loadmore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, React.createElement(ListItemText, {\n    primary: React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: function onClick() {\n        return getAdditionalPosts();\n      },\n      className: classes.maxWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \" Read More \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }))));\n}\n\nfunction PostItem(_ref2) {\n  var post = _ref2.post;\n  var classes = useStyles();\n  var history = useHistory();\n  var now = moment();\n  console.log(now);\n\n  var calcTimestampDiff = function calcTimestampDiff(timestamp) {\n    var scales = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'];\n\n    for (var i = 0; i < scales.length; i++) {\n      var scale = scales[i];\n      var diff = moment(now).diff(timestamp * 1000, scale);\n      if (diff > 0) return diff + scale.charAt(0);\n    }\n\n    return 0 + scales[scales.length - 1].charAt(0);\n  };\n\n  return React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, React.createElement(\"div\", {\n    className: classes.clickable,\n    onClick: function onClick() {\n      return history.push('/' + post.owner);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, React.createElement(Avatar, {\n    alt: post.owner,\n    src: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }))), React.createElement(ListItemText, {\n    primary: React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, post.owner, React.createElement(Typography, {\n      color: \"textSecondary\",\n      display: \"inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, ' ' + String.fromCharCode(183) + ' ' + calcTimestampDiff(post.timestamp))),\n    secondary: React.createElement(Typography, {\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, post.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/bhavan/Project/src/components/PostLists.js"],"names":["React","makeStyles","Button","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","CircularProgress","useHistory","moment","useStyles","theme","listRoot","width","wordBreak","overflow","borderRight","alignCenter","textAlign","loader","paddingTop","maxWidth","listHeader","position","top","zIndex","backgroundColor","borderBottom","clickable","cursor","PostList","isLoading","posts","getAdditionalPosts","listHeaderTitle","listHeaderTitleButton","classes","map","post","PostItem","history","now","console","log","calcTimestampDiff","timestamp","scales","i","length","scale","diff","charAt","id","push","owner","String","fromCharCode","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,OAJF,EAKEC,YALF,EAMEC,cANF,EAOEC,MAPF,EAQEC,UARF,EASEC,gBATF,QAUO,mBAVP;AAYA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,IAAMC,SAAS,GAAGZ,UAAU,CAAC,UAAAa,KAAK;AAAA,SAAK;AACrCC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,MADC;AAERC,MAAAA,SAAS,EAAE,WAFH;AAGRC,MAAAA,QAAQ,EAAE,QAHF;AAIRC,MAAAA,WAAW,EAAE;AAJL,KAD2B;AAOrCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE;AADA,KAPwB;AAUrCC,IAAAA,MAAM,EAAE;AACND,MAAAA,SAAS,EAAE,QADL;AAENE,MAAAA,UAAU,EAAE;AAFN,KAV6B;AAcrCC,IAAAA,QAAQ,EAAE;AACRR,MAAAA,KAAK,EAAE;AADC,KAd2B;AAiBrCS,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,QADA;AAEVC,MAAAA,GAAG,EAAE,CAFK;AAGVC,MAAAA,MAAM,EAAE,IAHE;AAIVC,MAAAA,eAAe,EAAE,SAJP;AAKVC,MAAAA,YAAY,EAAE;AALJ,KAjByB;AAwBrCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAE;AADC;AAxB0B,GAAL;AAAA,CAAN,CAA5B;AA6BA,eAAe,SAASC,QAAT,OAAoG;AAAA;;AAAA,MAAhFC,SAAgF,QAAhFA,SAAgF;AAAA,MAArEC,KAAqE,QAArEA,KAAqE;AAAA,MAA9DC,kBAA8D,QAA9DA,kBAA8D;AAAA,MAA1CC,eAA0C,QAA1CA,eAA0C;AAAA,MAAzBC,qBAAyB,QAAzBA,qBAAyB;AACjH,MAAMC,OAAO,GAAG1B,SAAS,EAAzB;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE0B,OAAO,CAACxB,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGmB,SAAS,GACR,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEK,OAAO,CAACjB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADQ,GAKR,oBAAC,IAAD;AAAM,IAAA,cAAc,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAC,YADb;AAEE,IAAA,SAAS,EAAEiB,OAAO,CAACd,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,IADV;AAEE,IAAA,UAAU,EAAC,gBAFb;AAGE,IAAA,QAAQ,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGY,eALH,EAMGC,qBAAqB,IAAIA,qBAN5B,CAJF,CADF,EAcGH,KAAK,CAACK,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADa;AAAA,GAAd,CAdH,EAoBE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAC,YADb;AAEE,IAAA,SAAS,EAAEF,OAAO,CAACnB,WAFrB;AAGE,IAAA,GAAG,EAAC,UAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,YAAD;AACE,IAAA,OAAO,EACL,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,OAAO,EAAE;AAAA,eAAMgB,kBAAkB,EAAxB;AAAA,OAApC;AAAgE,MAAA,SAAS,EAAEG,OAAO,CAACf,QAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CApBF,CANJ,CADF;AA0CD;;AAED,SAASkB,QAAT,QAA4B;AAAA,MAARD,IAAQ,SAARA,IAAQ;AAC1B,MAAMF,OAAO,GAAG1B,SAAS,EAAzB;AACA,MAAM8B,OAAO,GAAGhC,UAAU,EAA1B;AACA,MAAMiC,GAAG,GAAGhC,MAAM,EAAlB;AACAiC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAEA,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,SAAD,EAAe;AACvC,QAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,OAArC,EAA8C,SAA9C,EAAyD,SAAzD,CAAf;;AAEA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGD,MAAM,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnC,UAAME,KAAK,GAAGH,MAAM,CAACC,CAAD,CAApB;AACA,UAAMG,IAAI,GAAGzC,MAAM,CAACgC,GAAD,CAAN,CAAYS,IAAZ,CAAiBL,SAAS,GAAG,IAA7B,EAAmCI,KAAnC,CAAb;AACA,UAAIC,IAAI,GAAG,CAAX,EAAc,OAAOA,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa,CAAb,CAAd;AACf;;AAED,WAAO,IAAIL,MAAM,CAACA,MAAM,CAACE,MAAP,GAAgB,CAAjB,CAAN,CAA0BG,MAA1B,CAAiC,CAAjC,CAAX;AACD,GAVD;;AAYA,SACE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAC,YAArB;AAAkC,IAAA,GAAG,EAAEb,IAAI,CAACc,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACR,SAAxB;AAAmC,IAAA,OAAO,EAAE;AAAA,aAAMY,OAAO,CAACa,IAAR,CAAa,MAAMf,IAAI,CAACgB,KAAxB,CAAN;AAAA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEhB,IAAI,CAACgB,KAAlB;AAAyB,IAAA,GAAG,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME,oBAAC,YAAD;AACE,IAAA,OAAO,EACL,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,IAAI,CAACgB,KADR,EAEE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,OAAO,EAAC,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,MAAMC,MAAM,CAACC,YAAP,CAAoB,GAApB,CAAN,GAAiC,GAAjC,GAAuCZ,iBAAiB,CAACN,IAAI,CAACO,SAAN,CAJ3D,CAFF,CAFJ;AAYE,IAAA,SAAS,EACP,oBAAC,UAAD;AACE,MAAA,KAAK,EAAC,aADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGP,IAAI,CAACmB,OAHR,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AA6BD","sourcesContent":["import React from 'react';\r\nimport {View} from \"react-native\"\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Typography,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\n\r\nimport { useHistory } from 'react-router';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listRoot: {\r\n    width: '100%',\r\n    wordBreak: 'break-all',\r\n    overflow: 'scroll',\r\n    borderRight: '1px solid #37444C',\r\n  },\r\n  alignCenter: {\r\n    textAlign: 'center',\r\n  },\r\n  loader: {\r\n    textAlign: 'center',\r\n    paddingTop: 20,\r\n  },\r\n  maxWidth: {\r\n    width: '100%',\r\n  },\r\n  listHeader: {\r\n    position: 'sticky',\r\n    top: 0,\r\n    zIndex: 1200,\r\n    backgroundColor: '#15202B',\r\n    borderBottom: '1px solid #37444C',\r\n  },\r\n  clickable: {\r\n    cursor: 'pointer',\r\n  }\r\n}));\r\n\r\nexport default function PostList({ isLoading, posts, getAdditionalPosts, listHeaderTitle, listHeaderTitleButton }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <View className={classes.listRoot}>\r\n      {isLoading ?\r\n        <View className={classes.loader}>\r\n          <CircularProgress size={25} />\r\n        </View>\r\n        :\r\n        <List disablePadding>\r\n          <ListItem\r\n            alignItems=\"flex-start\"\r\n            className={classes.listHeader}\r\n          >\r\n            <Typography\r\n              variant='h5'\r\n              fontWeight=\"fontWeightBold\"\r\n              maxWidth\r\n            >\r\n              {listHeaderTitle}\r\n              {listHeaderTitleButton && listHeaderTitleButton}\r\n            </Typography>\r\n          </ListItem>\r\n          {posts.map(post => (\r\n            <span>\r\n              <PostItem post={post} />\r\n              <Divider component=\"li\" />\r\n            </span>\r\n          ))}\r\n          <ListItem\r\n            alignItems=\"flex-start\"\r\n            className={classes.alignCenter}\r\n            key='loadmore'\r\n          >\r\n            <ListItemText\r\n              primary={\r\n                <Button variant='outlined' onClick={() => getAdditionalPosts()} className={classes.maxWidth}> Read More </Button>\r\n              }\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction PostItem({ post }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const now = moment();\r\n  console.log(now)\r\n\r\n  const calcTimestampDiff = (timestamp) => {\r\n    const scales = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'];\r\n\r\n    for (let i=0; i < scales.length; i++){\r\n      const scale = scales[i];\r\n      const diff = moment(now).diff(timestamp * 1000, scale);\r\n      if( diff > 0) return diff + scale.charAt(0)\r\n    }\r\n\r\n    return 0 + scales[scales.length - 1].charAt(0)\r\n  }\r\n\r\n  return (\r\n    <ListItem alignItems='flex-start' key={post.id}>\r\n      <ListItemAvatar>\r\n        <div className={classes.clickable} onClick={() => history.push('/' + post.owner)}>\r\n          <Avatar alt={post.owner} src='/' />\r\n        </div>\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={\r\n          <React.Fragment>\r\n            {post.owner}\r\n            <Typography\r\n              color='textSecondary'\r\n              display='inline'\r\n            >\r\n              {' ' + String.fromCharCode(183) + ' ' + calcTimestampDiff(post.timestamp)}\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n        secondary={\r\n          <Typography\r\n            color='textPrimary'\r\n          >\r\n            {post.content}\r\n          </Typography>\r\n        }\r\n      />\r\n    </ListItem>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}