{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bhavan\\\\Project\\\\components\\\\ChatListItem\\\\index.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport styles from \"./style\";\nimport moment from \"moment\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Auth } from 'aws-amplify';\n\nvar ChatListItem = function ChatListItem(props) {\n  var chatRoom = props.chatRoom;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      otherUser = _useState2[0],\n      setOtherUser = _useState2[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var getOtherUser = function getOtherUser() {\n      var userInfo;\n      return _regeneratorRuntime.async(function getOtherUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n            case 2:\n              userInfo = _context.sent;\n\n              if (chatRoom.chatRoomUsers.items[0].user.id !== chatRoom.chatRoomUsers.items[1].user.id) {\n                if (chatRoom.chatRoomUsers.items[0].user.id === userInfo.attributes.sub) {\n                  setOtherUser(chatRoom.chatRoomUsers.items[1].user);\n                } else {\n                  setOtherUser(chatRoom.chatRoomUsers.items[0].user);\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getOtherUser();\n  }, []);\n\n  var onClick = function onClick() {\n    navigation.navigate('ChatRoom', {\n      id: 89,\n      name: otherUser\n    });\n  };\n\n  if (!otherUser) {\n    return null;\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.leftContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: otherUser.imageUri\n    },\n    style: styles.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.midContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.username,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, otherUser.name), React.createElement(Text, {\n    numberOfLines: 2,\n    style: styles.lastMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, chatRoom.lastMessage ? chatRoom.lastMessage.user.name + \": \" + chatRoom.lastMessage.content : \"\"))), React.createElement(Text, {\n    style: styles.time,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, chatRoom.lastMessage && moment(chatRoom.lastMessage.createdAt).format(\"DD/MM/YYYY\"))));\n};\n\nexport default ChatListItem;","map":{"version":3,"sources":["C:/Users/bhavan/Project/components/ChatListItem/index.tsx"],"names":["React","useEffect","useState","styles","moment","useNavigation","Auth","ChatListItem","props","chatRoom","otherUser","setOtherUser","navigation","getOtherUser","currentAuthenticatedUser","userInfo","chatRoomUsers","items","user","id","attributes","sub","onClick","navigate","name","container","leftContainer","uri","imageUri","avatar","midContainer","username","lastMessage","content","time","createdAt","format"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  TouchableWithoutFeedback\r\n} from \"react-native\";\r\nimport { ChatRoom } from \"../../types\";\r\nimport styles from \"./style\";\r\nimport moment from \"moment\";\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport {\r\n  Auth,\r\n} from 'aws-amplify';\r\n\r\nexport type ChatListItemProps = {\r\n  chatRoom: ChatRoom;\r\n}\r\n\r\nconst ChatListItem = (props: ChatListItemProps) => {\r\n  const { chatRoom } = props;\r\n  const [ otherUser, setOtherUser] = useState(null);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    const getOtherUser = async () => {\r\n      const userInfo = await Auth.currentAuthenticatedUser();\r\n      // console.log(userInfo.attributes.sub);\r\n      // console.log(chatRoom.chatRoomUsers);\r\n\r\n      if(chatRoom.chatRoomUsers.items[0].user.id !== chatRoom.chatRoomUsers.items[1].user.id){\r\n          if (chatRoom.chatRoomUsers.items[0].user.id === userInfo.attributes.sub) {\r\n        setOtherUser(chatRoom.chatRoomUsers.items[1].user);\r\n      } else {\r\n        setOtherUser(chatRoom.chatRoomUsers.items[0].user);\r\n      }\r\n      }\r\n\r\n      \r\n    }\r\n    getOtherUser();\r\n  }, [])\r\n\r\n  const onClick = () => {\r\n    navigation.navigate('ChatRoom', {\r\n      id: 89,\r\n      name: otherUser,\r\n    })\r\n  }\r\n\r\n  if (!otherUser) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={onClick}>\r\n      <View style={styles.container}>\r\n        <View style={styles.leftContainer}>\r\n          <Image source={{ uri: otherUser.imageUri }} style={styles.avatar}/>\r\n\r\n          <View style={styles.midContainer}>\r\n            <Text style={styles.username}>{otherUser.name}</Text>\r\n            <Text\r\n              numberOfLines={2}\r\n              style={styles.lastMessage}>\r\n              {chatRoom.lastMessage\r\n                ? `${chatRoom.lastMessage.user.name}: ${chatRoom.lastMessage.content}`\r\n                : \"\"}\r\n            </Text>\r\n          </View>\r\n\r\n        </View>\r\n\r\n        <Text style={styles.time}>\r\n          {chatRoom.lastMessage && moment(chatRoom.lastMessage.createdAt).format(\"DD/MM/YYYY\")}\r\n        </Text>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  )\r\n};\r\n\r\nexport default ChatListItem;"]},"metadata":{},"sourceType":"module"}